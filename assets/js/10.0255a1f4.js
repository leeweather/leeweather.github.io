(window.webpackJsonp=window.webpackJsonp||[]).push([[10],{388:function(t,a,s){t.exports=s.p+"assets/img/box.ed96b6e6.png"},389:function(t,a,s){t.exports=s.p+"assets/img/box2.eb579651.png"},412:function(t,a,s){"use strict";s.r(a);var r=s(54),e=Object(r.a)({},(function(){var t=this,a=t.$createElement,r=t._self._c||a;return r("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[r("h3",{attrs:{id:"盒模型"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#盒模型"}},[t._v("#")]),t._v(" 盒模型")]),t._v(" "),r("h3",{attrs:{id:"如何改变盒模型的属性"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#如何改变盒模型的属性"}},[t._v("#")]),t._v(" 如何改变盒模型的属性")]),t._v(" "),r("h3",{attrs:{id:"标准盒模型-怪异盒模型"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#标准盒模型-怪异盒模型"}},[t._v("#")]),t._v(" 标准盒模型 怪异盒模型")]),t._v(" "),r("p",[r("img",{attrs:{src:s(388),alt:"笔试题"}}),t._v(" "),r("img",{attrs:{src:s(389),alt:"笔试题"}}),t._v("\n盒模型都是由四部分组成的，content，padding,border,margin"),r("br"),t._v("\n标准盒模型和ie盒模型的区别在于设置width和height时的范围不同")]),t._v(" "),r("ul",[r("li",[t._v("ie盒模型的范围为content+padding+border")]),t._v(" "),r("li",[t._v("标准盒模型的范围只为content\n可以通过修改box-sizing的属性来修改盒模型")]),t._v(" "),r("li",[r("code",[t._v("box-sizing:content-box")]),t._v("表示标准盒模型")]),t._v(" "),r("li",[r("code",[t._v("box-sizing:border-box")]),t._v("表示IE盒模型(怪异盒模型)")])]),t._v(" "),r("h3",{attrs:{id:"bfc"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#bfc"}},[t._v("#")]),t._v(" BFC")]),t._v(" "),r("p",[t._v("BFC (Block Formatting Context)块格式化上下文，是布局过程中生成块级盒子的范围，也是浮动和其他元素的交界范围"),r("br"),t._v("\n通俗来讲：BFC是一个独立的布局环境，也可以理解为是一个容器，在这个容器中按照一定的规则进行物体的摆放，并且不会影响其他容器中的元素，如果一个元素触发BFC，则BFC中的元素不受外界的元素影响")]),t._v(" "),r("h4",{attrs:{id:"如何触发bfc"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#如何触发bfc"}},[t._v("#")]),t._v(" 如何触发BFC")]),t._v(" "),r("ul",[r("li",[t._v("根元素Body")]),t._v(" "),r("li",[t._v("元素设置浮动：float除none以外的值")]),t._v(" "),r("li",[t._v("元素设置绝对定位：position:absolute")]),t._v(" "),r("li",[t._v("display:inline-block,flex,table-cell")]),t._v(" "),r("li",[t._v("overflow:hidden,auto,scroll")])]),t._v(" "),r("h3",{attrs:{id:"js数据类型"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#js数据类型"}},[t._v("#")]),t._v(" js数据类型")]),t._v(" "),r("h3",{attrs:{id:"symbol-bigint"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#symbol-bigint"}},[t._v("#")]),t._v(" symbol BigInt")]),t._v(" "),r("h3",{attrs:{id:"null是基本数据类型还是复杂数据类型"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#null是基本数据类型还是复杂数据类型"}},[t._v("#")]),t._v(" null是基本数据类型还是复杂数据类型")]),t._v(" "),r("h3",{attrs:{id:"typeof-null-为什么是object"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#typeof-null-为什么是object"}},[t._v("#")]),t._v(" typeof null 为什么是object")]),t._v(" "),r("h3",{attrs:{id:"为什么基本数据类型存在栈上-复杂数据类型存在堆上"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#为什么基本数据类型存在栈上-复杂数据类型存在堆上"}},[t._v("#")]),t._v(" 为什么基本数据类型存在栈上，复杂数据类型存在堆上")]),t._v(" "),r("h3",{attrs:{id:"栈跟堆在存储数据开辟内存的时候有什么区别"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#栈跟堆在存储数据开辟内存的时候有什么区别"}},[t._v("#")]),t._v(" 栈跟堆在存储数据开辟内存的时候有什么区别")]),t._v(" "),r("h3",{attrs:{id:"给一个未知类型的数据-计算机如果判断他应该存在栈还是堆"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#给一个未知类型的数据-计算机如果判断他应该存在栈还是堆"}},[t._v("#")]),t._v(" 给一个未知类型的数据，计算机如果判断他应该存在栈还是堆")]),t._v(" "),r("h3",{attrs:{id:"数据类型检测方式"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#数据类型检测方式"}},[t._v("#")]),t._v(" 数据类型检测方式")]),t._v(" "),r("h3",{attrs:{id:"为什么object-prototype-tostring-call可以判断数据类型"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#为什么object-prototype-tostring-call可以判断数据类型"}},[t._v("#")]),t._v(" 为什么Object.prototype.toString.call可以判断数据类型")]),t._v(" "),r("h3",{attrs:{id:"箭头函数和普通函数区别"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#箭头函数和普通函数区别"}},[t._v("#")]),t._v(" 箭头函数和普通函数区别")]),t._v(" "),r("h3",{attrs:{id:"箭头函数的argument对象"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#箭头函数的argument对象"}},[t._v("#")]),t._v(" 箭头函数的argument对象")]),t._v(" "),r("h3",{attrs:{id:"js事件循环机制"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#js事件循环机制"}},[t._v("#")]),t._v(" js事件循环机制")]),t._v(" "),r("h3",{attrs:{id:"mutationobserver作用"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#mutationobserver作用"}},[t._v("#")]),t._v(" MutationObserver作用")]),t._v(" "),r("h3",{attrs:{id:"手写promise-all"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#手写promise-all"}},[t._v("#")]),t._v(" 手写Promise.all")])])}),[],!1,null,null,null);a.default=e.exports}}]);